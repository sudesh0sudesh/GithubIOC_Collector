name: Generic.Detection.CVE2024_3400
author: Matt Green - @mgreen27
description: |
  This artifact enables detection of exploitation for CVE-2024-3400: Critical 
  Command Injection Vulnerability in Palo Alto Networks Firewalls.
  
  Steps for analysis:
  
  1. Generate a Tech support file on your Palo Alto Device
    ```PAN GUI: Device > Support > Generate Tech Support file```
  2. Download and extract to a path on disk
  3. Run velociraptor in gui mode
    ```velociraptor gui```
  4. Run this artifact: Generic.Detection.CVE_2024_4300
    Ensure correct glob path is added to TargetGlob path (with trailing /**)
    
    
  Additional analysis information:
  
  - The /var/log/pan/gpsvc.log file will log an unmarshal failure message for every malformed session created
  - The NGINX frontend web server, which proxies requests to the GlobalProtect service, will log client IPs in /var/log/nginx/sslvpn_access.log
  - Similarly, the log file /var/log/pan/sslvpn-access/sslvpn-access.log will also contain a log of the HTTP requests
  - The "device_telemetry_*.log" files in /var/log/pan will log the command being injected
  - Several 0 length files are created in the following directories during checks 
  and exploitation: /opt/panlogs/tmp/device_telemetry/hour/,
  /opt/panlogs/tmp/device_telemetry/minute/, 
  /var/appweb/sslvpndocs/global-protect/portal/fonts/

reference:
    - https://www.rapid7.com/blog/post/2024/04/12/etr-cve-2024-3400-critical-command-injection-vulnerability-in-palo-alto-networks-firewalls-2/
    
type: CLIENT
parameters:
  - name: TargetGlob
    description: Glob path to extracted PAN support file
    default: /path/to/extracted/2024*_techsupport/**'
  - name: UploadHits
    type: bool
  - name: YaraRule
    type: yara
    description: Final Yara option and the default if no other options provided.
    default: |
        rule APT_UTA028_ForensicArtefacts_PaloAlto_CVE_2024_3400_Apr24_1 : SCRIPT {
           meta:
              description = "Detects forensic artefacts of APT UTA028 as found in a campaign exploiting the Palo Alto CVE-2024-3400 vulnerability"
              author = "Florian Roth"
              reference = "https://www.volexity.com/blog/2024/04/12/zero-day-exploitation-of-unauthenticated-remote-code-execution-vulnerability-in-globalprotect-cve-2024-3400/"
              date = "2024-04-15"
              modified = "2024-04-18"
              score = 70
           strings:
              $x1 = "cmd = base64.b64decode(rst.group"
              $x2 = "f.write(\"/*\"+output+\"*/\")"
        
              $x3 = "* * * * * root wget -qO- http://"
              $x4 = "rm -f /var/appweb/sslvpndocs/global-protect/*.css"
        
              $x5a = "failed to unmarshal session(../" // https://security.paloaltonetworks.com/CVE-2024-3400
              $x5b = "failed to unmarshal session(./../" // customer data
        
              $x6 = "rm -rf /opt/panlogs/tmp/device_telemetry/minute/*" base64
              $x7 = "$(uname -a) > /var/" base64
           condition:
              1 of them
        }
        
        rule EXPL_PaloAlto_CVE_2024_3400_Apr24_1 {
           meta:
              description = "Detects characteristics of the exploit code used in attacks against Palo Alto GlobalProtect CVE-2024-3400"
              author = "Florian Roth"
              reference = "https://www.volexity.com/blog/2024/04/12/zero-day-exploitation-of-unauthenticated-remote-code-execution-vulnerability-in-globalprotect-cve-2024-3400/"
              date = "2024-04-15"
              score = 70
           strings:
              $x1 = "SESSID=../../../../opt/panlogs/"
              $x2 = "SESSID=./../../../../opt/panlogs/"
              
              $sa1 = "SESSID=../../../../"
              $sa2 = "SESSID=./../../../../"
              
              $sb2 = "${IFS}"
           condition:
              1 of ($x*)
              or (1 of ($sa*) and $sb2)
        }
        
        rule SUSP_LNX_Base64_Download_Exec_Apr24 : SCRIPT {
           meta:
              description = "Detects suspicious base64 encoded shell commands used for downloading and executing further stages"
              author = "Paul Hager"
              date = "2024-04-18"
              reference = "Internal Research"
              score = 75
           strings:
              $sa1 = "curl http" base64
              $sa2 = "wget http" base64
              
              $sb1 = "chmod 777 " base64
              $sb2 = "/tmp/" base64
           condition:
              1 of ($sa*)
              and all of ($sb*)
        }
        
        rule SUSP_PY_Import_Statement_Apr24_1 {
           meta:
              description = "Detects suspicious Python import statement and socket usage often found in Python reverse shells"
              author = "Florian Roth"
              reference = "https://www.volexity.com/blog/2024/04/12/zero-day-exploitation-of-unauthenticated-remote-code-execution-vulnerability-in-globalprotect-cve-2024-3400/"
              date = "2024-04-15"
              score = 65
           strings:
              $x1 = "import sys,socket,os,pty;s=socket.socket("
           condition:
              1 of them
        }
        
        rule SUSP_LNX_Base64_Exec_Apr24 : SCRIPT {
           meta:
              description = "Detects suspicious base64 encoded shell commands (as seen in Palo Alto CVE-2024-3400 exploitation)"
              author = "Christian Burkard"
              date = "2024-04-18"
              reference = "Internal Research"
              score = 75
           strings:
              $s1 = "curl http://" base64
              $s2 = "wget http://" base64
              $s3 = ";chmod 777 " base64
              $s4 = "/tmp/" base64

              $mirai = "country="
           condition:
              any of them and not $mirai
        }

sources:
  - query: |
      -- first find all matching glob
      LET files = SELECT OSPath, Name, Size, Mtime, Atime, Ctime, Btime
        FROM glob(globs=TargetGlob,nosymlink='True')
        WHERE NOT IsDir AND NOT IsLink

      -- scan files and prepare hit metadata
      SELECT * FROM foreach(row=files,
            query={
                SELECT
                    OSPath,
                    File.Size as Size,
                    Mtime, Atime, Ctime, Btime,
                    Rule, Tags, Meta,
                    String.Name as YaraString,
                    String.Data as StringData,
                    String.Offset as HitOffset
                FROM yara(rules=YaraRule,files=OSPath,number=9999999)
            })
